Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 3A95F1BF2AB
	for <lists+linux-kernel@lfdr.de>; Thu, 30 Apr 2020 10:24:50 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726631AbgD3IYj (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Thu, 30 Apr 2020 04:24:39 -0400
Received: from mx2.suse.de ([195.135.220.15]:52448 "EHLO mx2.suse.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726412AbgD3IYi (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 30 Apr 2020 04:24:38 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx2.suse.de (Postfix) with ESMTP id 14780AD79;
        Thu, 30 Apr 2020 08:24:36 +0000 (UTC)
Date:   Thu, 30 Apr 2020 10:24:36 +0200
Message-ID: <s5hk11xidob.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     David Laight <David.Laight@ACULAB.COM>
Cc:     'Arnd Bergmann' <arnd@arndb.de>, Jaroslav Kysela <perex@perex.cz>,
        "Takashi Iwai" <tiwai@suse.com>,
        "alsa-devel@alsa-project.org" <alsa-devel@alsa-project.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] ALSA: opti9xx: shut up gcc-10 range warning
In-Reply-To: <c513eb4c4a01470eb3c47d8134afbec1@AcuMS.aculab.com>
References: <20200429190216.85919-1-arnd@arndb.de>
        <c513eb4c4a01470eb3c47d8134afbec1@AcuMS.aculab.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 30 Apr 2020 10:15:02 +0200,
David Laight wrote:
> 
> From: Arnd Bergmann
> > Sent: 29 April 2020 20:02
> > gcc-10 points out a few instances of suspicious integer arithmetic
> > leading to value truncation:
> > 
> > sound/isa/opti9xx/opti92x-ad1848.c: In function 'snd_opti9xx_configure':
> > sound/isa/opti9xx/opti92x-ad1848.c:322:43: error: overflow in conversion from 'int' to 'unsigned char'
> > changes value from '(int)snd_opti9xx_read(chip, 3) & -256 | 240' to '240' [-Werror=overflow]
> >   322 |   (snd_opti9xx_read(chip, reg) & ~(mask)) | ((value) & (mask)))
> >       |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
> > sound/isa/opti9xx/opti92x-ad1848.c:351:3: note: in expansion of macro 'snd_opti9xx_write_mask'
> >   351 |   snd_opti9xx_write_mask(chip, OPTi9XX_MC_REG(3), 0xf0, 0xff);
> >       |   ^~~~~~~~~~~~~~~~~~~~~~
> > sound/isa/opti9xx/miro.c: In function 'snd_miro_configure':
> > sound/isa/opti9xx/miro.c:873:40: error: overflow in conversion from 'int' to 'unsigned char' changes
> > value from '(int)snd_miro_read(chip, 3) & -256 | 240' to '240' [-Werror=overflow]
> >   873 |   (snd_miro_read(chip, reg) & ~(mask)) | ((value) & (mask)))
> >       |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
> > sound/isa/opti9xx/miro.c:1010:3: note: in expansion of macro 'snd_miro_write_mask'
> >  1010 |   snd_miro_write_mask(chip, OPTi9XX_MC_REG(3), 0xf0, 0xff);
> >       |   ^~~~~~~~~~~~~~~~~~~
> > 
> > These are all harmless here as only the low 8 bit are passed down
> > anyway. Change the macros to inline functions to make the code
> > more readable and also avoid the warning.
> > 
> > Strictly speaking those functions also need locking to make the
> > read/write pair atomic, but it seems unlikely that anyone would
> > still run into that issue.
> > 
> > Fixes: 1841f613fd2e ("[ALSA] Add snd-miro driver")
> > Signed-off-by: Arnd Bergmann <arnd@arndb.de>
> > ---
> >  sound/isa/opti9xx/miro.c           | 9 ++++++---
> >  sound/isa/opti9xx/opti92x-ad1848.c | 9 ++++++---
> >  2 files changed, 12 insertions(+), 6 deletions(-)
> > 
> > diff --git a/sound/isa/opti9xx/miro.c b/sound/isa/opti9xx/miro.c
> > index e764816a8f7a..b039429e6871 100644
> > --- a/sound/isa/opti9xx/miro.c
> > +++ b/sound/isa/opti9xx/miro.c
> > @@ -867,10 +867,13 @@ static void snd_miro_write(struct snd_miro *chip, unsigned char reg,
> >  	spin_unlock_irqrestore(&chip->lock, flags);
> >  }
> > 
> > +static inline void snd_miro_write_mask(struct snd_miro *chip,
> > +		unsigned char reg, unsigned char value, unsigned char mask)
> > +{
> > +	unsigned char oldval = snd_miro_read(chip, reg);
> > 
> > -#define snd_miro_write_mask(chip, reg, value, mask)	\
> > -	snd_miro_write(chip, reg,			\
> > -		(snd_miro_read(chip, reg) & ~(mask)) | ((value) & (mask)))
> > +	snd_miro_write(chip, reg, (oldval & ~mask) | (value & mask));
> > +}
> 
> Isn't that likely to add additional masking with 0xff at the call sites?
> You will probably get better code if the arguments are 'unsigned int'.

I don't think such a micro optimization is needed.  
All registers, values and masks in the driver are 8bit, so keeping all
unsigned char is rather an improvement of readability.


thanks,

Takashi
