Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id C96FB2722FD
	for <lists+linux-kernel@lfdr.de>; Mon, 21 Sep 2020 13:48:54 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726849AbgIULst (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 21 Sep 2020 07:48:49 -0400
Received: from mailgw01.mediatek.com ([210.61.82.183]:58183 "EHLO
        mailgw01.mediatek.com" rhost-flags-OK-FAIL-OK-FAIL) by vger.kernel.org
        with ESMTP id S1726510AbgIULsr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 21 Sep 2020 07:48:47 -0400
X-UUID: 1801402b57dc43d192f950df819353ee-20200921
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=mediatek.com; s=dk;
        h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:In-Reply-To:Message-ID:Date:Subject:CC:To:From; bh=0aqTZVk9bRmcAMVjVp+RRfkroYKT6fTuKxtG5i1XBcY=;
        b=ddHq8n6Ea0ABRlEOKw/LzT35l4lw7Jvmt3IiHjWqCcMFoTiZulsNpKTvfya9y5h8acz9XUIyoKBsBZhFLBDIdgPSZY3WytwZfhOIk8DRGZ12GeUn/2PNRPgsIwUoXfKneFaD/DgD5GYufwzXLJvf+0OoIz6k/HADWqJWrLecOrQ=;
X-UUID: 1801402b57dc43d192f950df819353ee-20200921
Received: from mtkcas07.mediatek.inc [(172.21.101.84)] by mailgw01.mediatek.com
        (envelope-from <hsin-hsiung.wang@mediatek.com>)
        (Cellopoint E-mail Firewall v4.1.14 Build 0819 with TLSv1.2 ECDHE-RSA-AES256-SHA384 256/256)
        with ESMTP id 946838051; Mon, 21 Sep 2020 19:48:40 +0800
Received: from mtkcas08.mediatek.inc (172.21.101.126) by
 mtkmbs05n1.mediatek.inc (172.21.101.15) with Microsoft SMTP Server (TLS) id
 15.0.1497.2; Mon, 21 Sep 2020 19:48:37 +0800
Received: from mtksdaap41.mediatek.inc (172.21.77.4) by mtkcas08.mediatek.inc
 (172.21.101.73) with Microsoft SMTP Server id 15.0.1497.2 via Frontend
 Transport; Mon, 21 Sep 2020 19:48:39 +0800
From:   Hsin-Hsiung Wang <hsin-hsiung.wang@mediatek.com>
To:     Lee Jones <lee.jones@linaro.org>, Rob Herring <robh+dt@kernel.org>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Liam Girdwood <lgirdwood@gmail.com>,
        Mark Brown <broonie@kernel.org>
CC:     Hsin-Hsiung Wang <hsin-hsiung.wang@mediatek.com>,
        <devicetree@vger.kernel.org>,
        <linux-arm-kernel@lists.infradead.org>,
        <linux-mediatek@lists.infradead.org>,
        <linux-kernel@vger.kernel.org>, <srv_heupstream@mediatek.com>
Subject: [PATCH v2 1/8] mfd: mt6358: refine interrupt code
Date:   Mon, 21 Sep 2020 19:48:08 +0800
Message-ID: <1600688895-9238-2-git-send-email-hsin-hsiung.wang@mediatek.com>
X-Mailer: git-send-email 2.6.4
In-Reply-To: <1600688895-9238-1-git-send-email-hsin-hsiung.wang@mediatek.com>
References: <1600688895-9238-1-git-send-email-hsin-hsiung.wang@mediatek.com>
MIME-Version: 1.0
Content-Type: text/plain
X-MTK:  N
Content-Transfer-Encoding: base64
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

VGhpcyBwYXRjaCByZWZpbmVzIHRoZSBpbnRlcnJ1cHQgcmVsYXRlZCBjb2RlIHRvIHN1cHBvcnQg
bmV3IGNoaXBzLg0KDQpTaWduZWQtb2ZmLWJ5OiBIc2luLUhzaXVuZyBXYW5nIDxoc2luLWhzaXVu
Zy53YW5nQG1lZGlhdGVrLmNvbT4NCi0tLQ0KIGRyaXZlcnMvbWZkL210NjM1OC1pcnEuYyAgICAg
ICAgfCA2NSArKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLQ0KIGluY2x1
ZGUvbGludXgvbWZkL210NjM1OC9jb3JlLmggfCAgOCArKy0tLQ0KIDIgZmlsZXMgY2hhbmdlZCwg
NDEgaW5zZXJ0aW9ucygrKSwgMzIgZGVsZXRpb25zKC0pDQoNCmRpZmYgLS1naXQgYS9kcml2ZXJz
L21mZC9tdDYzNTgtaXJxLmMgYi9kcml2ZXJzL21mZC9tdDYzNTgtaXJxLmMNCmluZGV4IGRiNzM0
ZjIuLjRiMDk0ZTUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL21mZC9tdDYzNTgtaXJxLmMNCisrKyBi
L2RyaXZlcnMvbWZkL210NjM1OC1pcnEuYw0KQEAgLTEzLDcgKzEzLDkgQEANCiAjaW5jbHVkZSA8
bGludXgvcGxhdGZvcm1fZGV2aWNlLmg+DQogI2luY2x1ZGUgPGxpbnV4L3JlZ21hcC5oPg0KIA0K
LXN0YXRpYyBzdHJ1Y3QgaXJxX3RvcF90IG10NjM1OF9pbnRzW10gPSB7DQorI2RlZmluZSBNVEtf
UE1JQ19SRUdfV0lEVEggMTYNCisNCitzdGF0aWMgY29uc3Qgc3RydWN0IGlycV90b3BfdCBtdDYz
NThfaW50c1tdID0gew0KIAlNVDYzNThfVE9QX0dFTihCVUNLKSwNCiAJTVQ2MzU4X1RPUF9HRU4o
TERPKSwNCiAJTVQ2MzU4X1RPUF9HRU4oUFNDKSwNCkBAIC0yNCw2ICsyNiwxMyBAQCBzdGF0aWMg
c3RydWN0IGlycV90b3BfdCBtdDYzNThfaW50c1tdID0gew0KIAlNVDYzNThfVE9QX0dFTihNSVND
KSwNCiB9Ow0KIA0KK3N0YXRpYyBzdHJ1Y3QgcG1pY19pcnFfZGF0YSBtdDYzNThfaXJxZCA9IHsN
CisJLm51bV90b3AgPSBBUlJBWV9TSVpFKG10NjM1OF9pbnRzKSwNCisJLm51bV9wbWljX2lycXMg
PSBNVDYzNThfSVJRX05SLA0KKwkudG9wX2ludF9zdGF0dXNfcmVnID0gTVQ2MzU4X1RPUF9JTlRf
U1RBVFVTMCwNCisJLnBtaWNfaW50cyA9IG10NjM1OF9pbnRzLA0KK307DQorDQogc3RhdGljIHZv
aWQgcG1pY19pcnFfZW5hYmxlKHN0cnVjdCBpcnFfZGF0YSAqZGF0YSkNCiB7DQogCXVuc2lnbmVk
IGludCBod2lycSA9IGlycWRfdG9faHdpcnEoZGF0YSk7DQpAQCAtNjIsMTUgKzcxLDE1IEBAIHN0
YXRpYyB2b2lkIHBtaWNfaXJxX3N5bmNfdW5sb2NrKHN0cnVjdCBpcnFfZGF0YSAqZGF0YSkNCiAJ
CS8qIEZpbmQgb3V0IHRoZSBJUlEgZ3JvdXAgKi8NCiAJCXRvcF9ncCA9IDA7DQogCQl3aGlsZSAo
KHRvcF9ncCArIDEpIDwgaXJxZC0+bnVtX3RvcCAmJg0KLQkJICAgICAgIGkgPj0gbXQ2MzU4X2lu
dHNbdG9wX2dwICsgMV0uaHdpcnFfYmFzZSkNCisJCSAgICAgICBpID49IGlycWQtPnBtaWNfaW50
c1t0b3BfZ3AgKyAxXS5od2lycV9iYXNlKQ0KIAkJCXRvcF9ncCsrOw0KIA0KIAkJLyogRmluZCB0
aGUgSVJRIHJlZ2lzdGVycyAqLw0KLQkJZ3Bfb2Zmc2V0ID0gaSAtIG10NjM1OF9pbnRzW3RvcF9n
cF0uaHdpcnFfYmFzZTsNCi0JCWludF9yZWdzID0gZ3Bfb2Zmc2V0IC8gTVQ2MzU4X1JFR19XSURU
SDsNCi0JCXNoaWZ0ID0gZ3Bfb2Zmc2V0ICUgTVQ2MzU4X1JFR19XSURUSDsNCi0JCWVuX3JlZyA9
IG10NjM1OF9pbnRzW3RvcF9ncF0uZW5fcmVnICsNCi0JCQkgKG10NjM1OF9pbnRzW3RvcF9ncF0u
ZW5fcmVnX3NoaWZ0ICogaW50X3JlZ3MpOw0KKwkJZ3Bfb2Zmc2V0ID0gaSAtIGlycWQtPnBtaWNf
aW50c1t0b3BfZ3BdLmh3aXJxX2Jhc2U7DQorCQlpbnRfcmVncyA9IGdwX29mZnNldCAvIE1US19Q
TUlDX1JFR19XSURUSDsNCisJCXNoaWZ0ID0gZ3Bfb2Zmc2V0ICUgTVRLX1BNSUNfUkVHX1dJRFRI
Ow0KKwkJZW5fcmVnID0gaXJxZC0+cG1pY19pbnRzW3RvcF9ncF0uZW5fcmVnICsNCisJCQkgKGly
cWQtPnBtaWNfaW50c1t0b3BfZ3BdLmVuX3JlZ19zaGlmdCAqIGludF9yZWdzKTsNCiANCiAJCXJl
Z21hcF91cGRhdGVfYml0cyhjaGlwLT5yZWdtYXAsIGVuX3JlZywgQklUKHNoaWZ0KSwNCiAJCQkJ
ICAgaXJxZC0+ZW5hYmxlX2h3aXJxW2ldIDw8IHNoaWZ0KTsNCkBAIC05NSwxMCArMTA0LDExIEBA
IHN0YXRpYyB2b2lkIG10NjM1OF9pcnFfc3BfaGFuZGxlcihzdHJ1Y3QgbXQ2Mzk3X2NoaXAgKmNo
aXAsDQogCXVuc2lnbmVkIGludCBpcnFfc3RhdHVzLCBzdGFfcmVnLCBzdGF0dXM7DQogCXVuc2ln
bmVkIGludCBod2lycSwgdmlycTsNCiAJaW50IGksIGosIHJldDsNCisJc3RydWN0IHBtaWNfaXJx
X2RhdGEgKmlycWQgPSBjaGlwLT5pcnFfZGF0YTsNCiANCi0JZm9yIChpID0gMDsgaSA8IG10NjM1
OF9pbnRzW3RvcF9ncF0ubnVtX2ludF9yZWdzOyBpKyspIHsNCi0JCXN0YV9yZWcgPSBtdDYzNThf
aW50c1t0b3BfZ3BdLnN0YV9yZWcgKw0KLQkJCW10NjM1OF9pbnRzW3RvcF9ncF0uc3RhX3JlZ19z
aGlmdCAqIGk7DQorCWZvciAoaSA9IDA7IGkgPCBpcnFkLT5wbWljX2ludHNbdG9wX2dwXS5udW1f
aW50X3JlZ3M7IGkrKykgew0KKwkJc3RhX3JlZyA9IGlycWQtPnBtaWNfaW50c1t0b3BfZ3BdLnN0
YV9yZWcgKw0KKwkJCWlycWQtPnBtaWNfaW50c1t0b3BfZ3BdLnN0YV9yZWdfc2hpZnQgKiBpOw0K
IA0KIAkJcmV0ID0gcmVnbWFwX3JlYWQoY2hpcC0+cmVnbWFwLCBzdGFfcmVnLCAmaXJxX3N0YXR1
cyk7DQogCQlpZiAocmV0KSB7DQpAQCAtMTE0LDggKzEyNCw4IEBAIHN0YXRpYyB2b2lkIG10NjM1
OF9pcnFfc3BfaGFuZGxlcihzdHJ1Y3QgbXQ2Mzk3X2NoaXAgKmNoaXAsDQogCQlkbyB7DQogCQkJ
aiA9IF9fZmZzKHN0YXR1cyk7DQogDQotCQkJaHdpcnEgPSBtdDYzNThfaW50c1t0b3BfZ3BdLmh3
aXJxX2Jhc2UgKw0KLQkJCQlNVDYzNThfUkVHX1dJRFRIICogaSArIGo7DQorCQkJaHdpcnEgPSBp
cnFkLT5wbWljX2ludHNbdG9wX2dwXS5od2lycV9iYXNlICsNCisJCQkJTVRLX1BNSUNfUkVHX1dJ
RFRIICogaSArIGo7DQogDQogCQkJdmlycSA9IGlycV9maW5kX21hcHBpbmcoY2hpcC0+aXJxX2Rv
bWFpbiwgaHdpcnEpOw0KIAkJCWlmICh2aXJxKQ0KQEAgLTEzMSwxMiArMTQxLDEyIEBAIHN0YXRp
YyB2b2lkIG10NjM1OF9pcnFfc3BfaGFuZGxlcihzdHJ1Y3QgbXQ2Mzk3X2NoaXAgKmNoaXAsDQog
c3RhdGljIGlycXJldHVybl90IG10NjM1OF9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICpkYXRh
KQ0KIHsNCiAJc3RydWN0IG10NjM5N19jaGlwICpjaGlwID0gZGF0YTsNCi0Jc3RydWN0IHBtaWNf
aXJxX2RhdGEgKm10NjM1OF9pcnFfZGF0YSA9IGNoaXAtPmlycV9kYXRhOw0KKwlzdHJ1Y3QgcG1p
Y19pcnFfZGF0YSAqaXJxZCA9IGNoaXAtPmlycV9kYXRhOw0KIAl1bnNpZ25lZCBpbnQgYml0LCBp
LCB0b3BfaXJxX3N0YXR1cyA9IDA7DQogCWludCByZXQ7DQogDQogCXJldCA9IHJlZ21hcF9yZWFk
KGNoaXAtPnJlZ21hcCwNCi0JCQkgIG10NjM1OF9pcnFfZGF0YS0+dG9wX2ludF9zdGF0dXNfcmVn
LA0KKwkJCSAgaXJxZC0+dG9wX2ludF9zdGF0dXNfcmVnLA0KIAkJCSAgJnRvcF9pcnFfc3RhdHVz
KTsNCiAJaWYgKHJldCkgew0KIAkJZGV2X2VycihjaGlwLT5kZXYsDQpAQCAtMTQ0LDggKzE1NCw4
IEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBtdDYzNThfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAq
ZGF0YSkNCiAJCXJldHVybiBJUlFfTk9ORTsNCiAJfQ0KIA0KLQlmb3IgKGkgPSAwOyBpIDwgbXQ2
MzU4X2lycV9kYXRhLT5udW1fdG9wOyBpKyspIHsNCi0JCWJpdCA9IEJJVChtdDYzNThfaW50c1tp
XS50b3Bfb2Zmc2V0KTsNCisJZm9yIChpID0gMDsgaSA8IGlycWQtPm51bV90b3A7IGkrKykgew0K
KwkJYml0ID0gQklUKGlycWQtPnBtaWNfaW50c1tpXS50b3Bfb2Zmc2V0KTsNCiAJCWlmICh0b3Bf
aXJxX3N0YXR1cyAmIGJpdCkgew0KIAkJCW10NjM1OF9pcnFfc3BfaGFuZGxlcihjaGlwLCBpKTsN
CiAJCQl0b3BfaXJxX3N0YXR1cyAmPSB+Yml0Ow0KQEAgLTE4MCwxNyArMTkwLDE4IEBAIGludCBt
dDYzNThfaXJxX2luaXQoc3RydWN0IG10NjM5N19jaGlwICpjaGlwKQ0KIAlpbnQgaSwgaiwgcmV0
Ow0KIAlzdHJ1Y3QgcG1pY19pcnFfZGF0YSAqaXJxZDsNCiANCi0JaXJxZCA9IGRldm1fa3phbGxv
YyhjaGlwLT5kZXYsIHNpemVvZigqaXJxZCksIEdGUF9LRVJORUwpOw0KLQlpZiAoIWlycWQpDQot
CQlyZXR1cm4gLUVOT01FTTsNCisJc3dpdGNoIChjaGlwLT5jaGlwX2lkKSB7DQorCWNhc2UgTVQ2
MzU4X0NISVBfSUQ6DQorCQljaGlwLT5pcnFfZGF0YSA9ICZtdDYzNThfaXJxZDsNCisJCWJyZWFr
Ow0KIA0KLQljaGlwLT5pcnFfZGF0YSA9IGlycWQ7DQorCWRlZmF1bHQ6DQorCQlkZXZfZXJyKGNo
aXAtPmRldiwgInVuc3VwcG9ydGVkIGNoaXA6IDB4JXhcbiIsIGNoaXAtPmNoaXBfaWQpOw0KKwkJ
cmV0dXJuIC1FTk9ERVY7DQorCX0NCiANCiAJbXV0ZXhfaW5pdCgmY2hpcC0+aXJxbG9jayk7DQot
CWlycWQtPnRvcF9pbnRfc3RhdHVzX3JlZyA9IE1UNjM1OF9UT1BfSU5UX1NUQVRVUzA7DQotCWly
cWQtPm51bV9wbWljX2lycXMgPSBNVDYzNThfSVJRX05SOw0KLQlpcnFkLT5udW1fdG9wID0gQVJS
QVlfU0laRShtdDYzNThfaW50cyk7DQotDQorCWlycWQgPSBjaGlwLT5pcnFfZGF0YTsNCiAJaXJx
ZC0+ZW5hYmxlX2h3aXJxID0gZGV2bV9rY2FsbG9jKGNoaXAtPmRldiwNCiAJCQkJCSAgaXJxZC0+
bnVtX3BtaWNfaXJxcywNCiAJCQkJCSAgc2l6ZW9mKCppcnFkLT5lbmFibGVfaHdpcnEpLA0KQEAg
LTIwNywxMCArMjE4LDEwIEBAIGludCBtdDYzNThfaXJxX2luaXQoc3RydWN0IG10NjM5N19jaGlw
ICpjaGlwKQ0KIA0KIAkvKiBEaXNhYmxlIGFsbCBpbnRlcnJ1cHRzIGZvciBpbml0aWFsaXppbmcg
Ki8NCiAJZm9yIChpID0gMDsgaSA8IGlycWQtPm51bV90b3A7IGkrKykgew0KLQkJZm9yIChqID0g
MDsgaiA8IG10NjM1OF9pbnRzW2ldLm51bV9pbnRfcmVnczsgaisrKQ0KKwkJZm9yIChqID0gMDsg
aiA8IGlycWQtPnBtaWNfaW50c1tpXS5udW1faW50X3JlZ3M7IGorKykNCiAJCQlyZWdtYXBfd3Jp
dGUoY2hpcC0+cmVnbWFwLA0KLQkJCQkgICAgIG10NjM1OF9pbnRzW2ldLmVuX3JlZyArDQotCQkJ
CSAgICAgbXQ2MzU4X2ludHNbaV0uZW5fcmVnX3NoaWZ0ICogaiwgMCk7DQorCQkJCSAgICAgaXJx
ZC0+cG1pY19pbnRzW2ldLmVuX3JlZyArDQorCQkJCSAgICAgaXJxZC0+cG1pY19pbnRzW2ldLmVu
X3JlZ19zaGlmdCAqIGosIDApOw0KIAl9DQogDQogCWNoaXAtPmlycV9kb21haW4gPSBpcnFfZG9t
YWluX2FkZF9saW5lYXIoY2hpcC0+ZGV2LT5vZl9ub2RlLA0KZGlmZiAtLWdpdCBhL2luY2x1ZGUv
bGludXgvbWZkL210NjM1OC9jb3JlLmggYi9pbmNsdWRlL2xpbnV4L21mZC9tdDYzNTgvY29yZS5o
DQppbmRleCBjNWExMWI3Li42ODU3OGUyIDEwMDY0NA0KLS0tIGEvaW5jbHVkZS9saW51eC9tZmQv
bXQ2MzU4L2NvcmUuaA0KKysrIGIvaW5jbHVkZS9saW51eC9tZmQvbXQ2MzU4L2NvcmUuaA0KQEAg
LTYsMTIgKzYsOSBAQA0KICNpZm5kZWYgX19NRkRfTVQ2MzU4X0NPUkVfSF9fDQogI2RlZmluZSBf
X01GRF9NVDYzNThfQ09SRV9IX18NCiANCi0jZGVmaW5lIE1UNjM1OF9SRUdfV0lEVEggMTYNCi0N
CiBzdHJ1Y3QgaXJxX3RvcF90IHsNCiAJaW50IGh3aXJxX2Jhc2U7DQogCXVuc2lnbmVkIGludCBu
dW1faW50X3JlZ3M7DQotCXVuc2lnbmVkIGludCBudW1faW50X2JpdHM7DQogCXVuc2lnbmVkIGlu
dCBlbl9yZWc7DQogCXVuc2lnbmVkIGludCBlbl9yZWdfc2hpZnQ7DQogCXVuc2lnbmVkIGludCBz
dGFfcmVnOw0KQEAgLTI1LDYgKzIyLDcgQEAgc3RydWN0IHBtaWNfaXJxX2RhdGEgew0KIAl1bnNp
Z25lZCBzaG9ydCB0b3BfaW50X3N0YXR1c19yZWc7DQogCWJvb2wgKmVuYWJsZV9od2lycTsNCiAJ
Ym9vbCAqY2FjaGVfaHdpcnE7DQorCWNvbnN0IHN0cnVjdCBpcnFfdG9wX3QgKnBtaWNfaW50czsN
CiB9Ow0KIA0KIGVudW0gbXQ2MzU4X2lycV90b3Bfc3RhdHVzX3NoaWZ0IHsNCkBAIC0xNDYsOCAr
MTQ0LDggQEAgZW51bSBtdDYzNThfaXJxX251bWJlcnMgew0KIHsJXA0KIAkuaHdpcnFfYmFzZSA9
IE1UNjM1OF9JUlFfIyNzcCMjX0JBU0UsCVwNCiAJLm51bV9pbnRfcmVncyA9CVwNCi0JCSgoTVQ2
MzU4X0lSUV8jI3NwIyNfQklUUyAtIDEpIC8gTVQ2MzU4X1JFR19XSURUSCkgKyAxLAlcDQotCS5u
dW1faW50X2JpdHMgPSBNVDYzNThfSVJRXyMjc3AjI19CSVRTLCBcDQorCQkoKE1UNjM1OF9JUlFf
IyNzcCMjX0JJVFMgLSAxKSAvCVwNCisJCU1US19QTUlDX1JFR19XSURUSCkgKyAxLAlcDQogCS5l
bl9yZWcgPSBNVDYzNThfIyNzcCMjX1RPUF9JTlRfQ09OMCwJXA0KIAkuZW5fcmVnX3NoaWZ0ID0g
MHg2LAlcDQogCS5zdGFfcmVnID0gTVQ2MzU4XyMjc3AjI19UT1BfSU5UX1NUQVRVUzAsCVwNCi0t
IA0KMi42LjQNCg==

