Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id D415B25A595
	for <lists+linux-kernel@lfdr.de>; Wed,  2 Sep 2020 08:34:28 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726686AbgIBGeT (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Wed, 2 Sep 2020 02:34:19 -0400
Received: from mailgw02.mediatek.com ([210.61.82.184]:6506 "EHLO
        mailgw02.mediatek.com" rhost-flags-OK-FAIL-OK-FAIL) by vger.kernel.org
        with ESMTP id S1726312AbgIBGeQ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 2 Sep 2020 02:34:16 -0400
X-UUID: c5f78bce01224232ac8d6165bfaf697c-20200902
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=mediatek.com; s=dk;
        h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:In-Reply-To:Message-ID:Date:Subject:CC:To:From; bh=kxH3tHGksx8HMp2pVMJOe2I26SY3rM5VW3ZL8QVRR+w=;
        b=tTlVqBt5KGW7hJrtFvpexygtXonaW3wdHHGfALgKhgCCTHZPfLpjTtiUHbG0kS2/PJDnxU14UEsOaNDsQE+Try4F0Q1UQj0MsSwtMIiupxfiaSiSxRvPc1duw4Q/OQHpFRhIwdfH/reKU7jCg5/pVCT2zVeeIlDGqNPpbmEh0hI=;
X-UUID: c5f78bce01224232ac8d6165bfaf697c-20200902
Received: from mtkexhb01.mediatek.inc [(172.21.101.102)] by mailgw02.mediatek.com
        (envelope-from <mark-pk.tsai@mediatek.com>)
        (Cellopoint E-mail Firewall v4.1.14 Build 0819 with TLSv1.2 ECDHE-RSA-AES256-SHA384 256/256)
        with ESMTP id 1460731781; Wed, 02 Sep 2020 14:34:06 +0800
Received: from mtkcas07.mediatek.inc (172.21.101.84) by
 mtkmbs06n2.mediatek.inc (172.21.101.130) with Microsoft SMTP Server (TLS) id
 15.0.1497.2; Wed, 2 Sep 2020 14:34:05 +0800
Received: from mtksdccf07.mediatek.inc (172.21.84.99) by mtkcas07.mediatek.inc
 (172.21.101.73) with Microsoft SMTP Server id 15.0.1497.2 via Frontend
 Transport; Wed, 2 Sep 2020 14:34:04 +0800
From:   Mark-PK Tsai <mark-pk.tsai@mediatek.com>
To:     <maz@kernel.org>, <robh+dt@kernel.org>
CC:     <mark-pk.tsai@mediatek.com>, <alix.wu@mediatek.com>,
        <daniel@0x0f.com>, <devicetree@vger.kernel.org>,
        <jason@lakedaemon.net>, <linux-arm-kernel@lists.infradead.org>,
        <linux-kernel@vger.kernel.org>,
        <linux-mediatek@lists.infradead.org>, <matthias.bgg@gmail.com>,
        <tglx@linutronix.de>, <yj.chiang@mediatek.com>
Subject: [PATCH v3 1/2] irqchip: irq-mst: Add MStar interrupt controller support
Date:   Wed, 2 Sep 2020 14:33:43 +0800
Message-ID: <20200902063344.1852-2-mark-pk.tsai@mediatek.com>
X-Mailer: git-send-email 2.18.0
In-Reply-To: <20200902063344.1852-1-mark-pk.tsai@mediatek.com>
References: <20200902063344.1852-1-mark-pk.tsai@mediatek.com>
MIME-Version: 1.0
Content-Type: text/plain
X-TM-SNTS-SMTP: C1AD1E4F07400650ADD964CC6309425B7922614FDC0368EF2EA93CEBD55586AB2000:8
X-MTK:  N
Content-Transfer-Encoding: base64
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

QWRkIE1TdGFyIGludGVycnVwdCBjb250cm9sbGVyIHN1cHBvcnQgdXNpbmcgaGllcmFyY2h5IGly
cQ0KZG9tYWluLg0KDQpTaWduZWQtb2ZmLWJ5OiBNYXJrLVBLIFRzYWkgPG1hcmstcGsudHNhaUBt
ZWRpYXRlay5jb20+DQpUZXN0ZWQtYnk6IERhbmllbCBQYWxtZXIgPGRhbmllbEB0aGluZ3kuanA+
DQotLS0NCiBNQUlOVEFJTkVSUyAgICAgICAgICAgICAgICAgICAgfCAgIDcgKysNCiBkcml2ZXJz
L2lycWNoaXAvS2NvbmZpZyAgICAgICAgfCAgIDggKysNCiBkcml2ZXJzL2lycWNoaXAvTWFrZWZp
bGUgICAgICAgfCAgIDEgKw0KIGRyaXZlcnMvaXJxY2hpcC9pcnEtbXN0LWludGMuYyB8IDE5OSAr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysNCiA0IGZpbGVzIGNoYW5nZWQsIDIxNSBp
bnNlcnRpb25zKCspDQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvaXJxY2hpcC9pcnEtbXN0
LWludGMuYw0KDQpkaWZmIC0tZ2l0IGEvTUFJTlRBSU5FUlMgYi9NQUlOVEFJTkVSUw0KaW5kZXgg
ZTQ2NDdjODRjOTg3Li5mM2NlNjBiMTgxYWYgMTAwNjQ0DQotLS0gYS9NQUlOVEFJTkVSUw0KKysr
IGIvTUFJTlRBSU5FUlMNCkBAIC0xMTc1NSw2ICsxMTc1NSwxMyBAQCBROglodHRwOi8vcGF0Y2h3
b3JrLmxpbnV4dHYub3JnL3Byb2plY3QvbGludXgtbWVkaWEvbGlzdC8NCiBUOglnaXQgZ2l0Oi8v
bGludXh0di5vcmcvYW50dGlwL21lZGlhX3RyZWUuZ2l0DQogRjoJZHJpdmVycy9tZWRpYS91c2Iv
bXNpMjUwMC8NCiANCitNU1RBUiBJTlRFUlJVUFQgQ09OVFJPTExFUiBEUklWRVINCitNOglNYXJr
LVBLIFRzYWkgPG1hcmstcGsudHNhaUBtZWRpYXRlay5jb20+DQorTToJRGFuaWVsIFBhbG1lciA8
ZGFuaWVsQHRoaW5neS5qcD4NCitTOglNYWludGFpbmVkDQorRjoJRG9jdW1lbnRhdGlvbi9kZXZp
Y2V0cmVlL2JpbmRpbmdzL2ludGVycnVwdC1jb250cm9sbGVyL21zdGFyLG1zdC1pbnRjLnlhbWwN
CitGOglkcml2ZXJzL2lycWNoaXAvaXJxLW1zdC1pbnRjLmMNCisNCiBNU1lTVEVNUyBESVNLT05D
SElQIEczIE1URCBEUklWRVINCiBNOglSb2JlcnQgSmFyem1payA8cm9iZXJ0LmphcnptaWtAZnJl
ZS5mcj4NCiBMOglsaW51eC1tdGRAbGlzdHMuaW5mcmFkZWFkLm9yZw0KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvaXJxY2hpcC9LY29uZmlnIGIvZHJpdmVycy9pcnFjaGlwL0tjb25maWcNCmluZGV4IGJm
Yzk3MTlkYmNkYy4uYzYzMjFhNjlhZWQ5IDEwMDY0NA0KLS0tIGEvZHJpdmVycy9pcnFjaGlwL0tj
b25maWcNCisrKyBiL2RyaXZlcnMvaXJxY2hpcC9LY29uZmlnDQpAQCAtNTcxLDQgKzU3MSwxMiBA
QCBjb25maWcgTE9PTkdTT05fUENIX01TSQ0KIAloZWxwDQogCSAgU3VwcG9ydCBmb3IgdGhlIExv
b25nc29uIFBDSCBNU0kgQ29udHJvbGxlci4NCiANCitjb25maWcgTVNUX0lSUQ0KKwlib29sICJN
U3RhciBJbnRlcnJ1cHQgQ29udHJvbGxlciINCisJZGVmYXVsdCBBUkNIX01FRElBVEVLDQorCXNl
bGVjdCBJUlFfRE9NQUlODQorCXNlbGVjdCBJUlFfRE9NQUlOX0hJRVJBUkNIWQ0KKwloZWxwDQor
CSAgU3VwcG9ydCBNU3RhciBJbnRlcnJ1cHQgQ29udHJvbGxlci4NCisNCiBlbmRtZW51DQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL01ha2VmaWxlIGIvZHJpdmVycy9pcnFjaGlwL01ha2Vm
aWxlDQppbmRleCAxMzNmOWM0NTc0NGEuLmUyNjg4YTYyNDAzZSAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvaXJxY2hpcC9NYWtlZmlsZQ0KKysrIGIvZHJpdmVycy9pcnFjaGlwL01ha2VmaWxlDQpAQCAt
MTExLDMgKzExMSw0IEBAIG9iai0kKENPTkZJR19MT09OR1NPTl9IVFBJQykJCSs9IGlycS1sb29u
Z3Nvbi1odHBpYy5vDQogb2JqLSQoQ09ORklHX0xPT05HU09OX0hUVkVDKQkJKz0gaXJxLWxvb25n
c29uLWh0dmVjLm8NCiBvYmotJChDT05GSUdfTE9PTkdTT05fUENIX1BJQykJCSs9IGlycS1sb29u
Z3Nvbi1wY2gtcGljLm8NCiBvYmotJChDT05GSUdfTE9PTkdTT05fUENIX01TSSkJCSs9IGlycS1s
b29uZ3Nvbi1wY2gtbXNpLm8NCitvYmotJChDT05GSUdfTVNUX0lSUSkJCQkrPSBpcnEtbXN0LWlu
dGMubw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvaXJxY2hpcC9pcnEtbXN0LWludGMuYyBiL2RyaXZl
cnMvaXJxY2hpcC9pcnEtbXN0LWludGMuYw0KbmV3IGZpbGUgbW9kZSAxMDA2NDQNCmluZGV4IDAw
MDAwMDAwMDAwMC4uNGJlMDc3NTkxODk4DQotLS0gL2Rldi9udWxsDQorKysgYi9kcml2ZXJzL2ly
cWNoaXAvaXJxLW1zdC1pbnRjLmMNCkBAIC0wLDAgKzEsMTk5IEBADQorLy8gU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IChHUEwtMi4wIE9SIEJTRC0zLUNsYXVzZSkNCisvKg0KKyAqIENvcHlyaWdo
dCAoYykgMjAyMCBNZWRpYVRlayBJbmMuDQorICogQXV0aG9yIE1hcmstUEsgVHNhaSA8bWFyay1w
ay50c2FpQG1lZGlhdGVrLmNvbT4NCisgKi8NCisjaW5jbHVkZSA8bGludXgvaW50ZXJydXB0Lmg+
DQorI2luY2x1ZGUgPGxpbnV4L2lvLmg+DQorI2luY2x1ZGUgPGxpbnV4L2lycS5oPg0KKyNpbmNs
dWRlIDxsaW51eC9pcnFjaGlwLmg+DQorI2luY2x1ZGUgPGxpbnV4L2lycWRvbWFpbi5oPg0KKyNp
bmNsdWRlIDxsaW51eC9vZi5oPg0KKyNpbmNsdWRlIDxsaW51eC9vZl9hZGRyZXNzLmg+DQorI2lu
Y2x1ZGUgPGxpbnV4L29mX2lycS5oPg0KKyNpbmNsdWRlIDxsaW51eC9zbGFiLmg+DQorI2luY2x1
ZGUgPGxpbnV4L3NwaW5sb2NrLmg+DQorDQorI2RlZmluZSBJTlRDX01BU0sJMHgwDQorI2RlZmlu
ZSBJTlRDX0VPSQkweDIwDQorDQorc3RydWN0IG1zdF9pbnRjX2NoaXBfZGF0YSB7DQorCXJhd19z
cGlubG9ja190CWxvY2s7DQorCXVuc2lnbmVkIGludAlpcnFfc3RhcnQsIG5yX2lycXM7DQorCXZv
aWQgX19pb21lbQkqYmFzZTsNCisJYm9vbAkJbm9fZW9pOw0KK307DQorDQorc3RhdGljIHZvaWQg
bXN0X3NldF9pcnEoc3RydWN0IGlycV9kYXRhICpkLCB1MzIgb2Zmc2V0KQ0KK3sNCisJaXJxX2h3
X251bWJlcl90IGh3aXJxID0gaXJxZF90b19od2lycShkKTsNCisJc3RydWN0IG1zdF9pbnRjX2No
aXBfZGF0YSAqY2QgPSBpcnFfZGF0YV9nZXRfaXJxX2NoaXBfZGF0YShkKTsNCisJdTE2IHZhbCwg
bWFzazsNCisJdW5zaWduZWQgbG9uZyBmbGFnczsNCisNCisJbWFzayA9IDEgPDwgKGh3aXJxICUg
MTYpOw0KKwlvZmZzZXQgKz0gKGh3aXJxIC8gMTYpICogNDsNCisNCisJcmF3X3NwaW5fbG9ja19p
cnFzYXZlKCZjZC0+bG9jaywgZmxhZ3MpOw0KKwl2YWwgPSByZWFkd19yZWxheGVkKGNkLT5iYXNl
ICsgb2Zmc2V0KSB8IG1hc2s7DQorCXdyaXRld19yZWxheGVkKHZhbCwgY2QtPmJhc2UgKyBvZmZz
ZXQpOw0KKwlyYXdfc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2QtPmxvY2ssIGZsYWdzKTsNCit9
DQorDQorc3RhdGljIHZvaWQgbXN0X2NsZWFyX2lycShzdHJ1Y3QgaXJxX2RhdGEgKmQsIHUzMiBv
ZmZzZXQpDQorew0KKwlpcnFfaHdfbnVtYmVyX3QgaHdpcnEgPSBpcnFkX3RvX2h3aXJxKGQpOw0K
KwlzdHJ1Y3QgbXN0X2ludGNfY2hpcF9kYXRhICpjZCA9IGlycV9kYXRhX2dldF9pcnFfY2hpcF9k
YXRhKGQpOw0KKwl1MTYgdmFsLCBtYXNrOw0KKwl1bnNpZ25lZCBsb25nIGZsYWdzOw0KKw0KKwlt
YXNrID0gMSA8PCAoaHdpcnEgJSAxNik7DQorCW9mZnNldCArPSAoaHdpcnEgLyAxNikgKiA0Ow0K
Kw0KKwlyYXdfc3Bpbl9sb2NrX2lycXNhdmUoJmNkLT5sb2NrLCBmbGFncyk7DQorCXZhbCA9IHJl
YWR3X3JlbGF4ZWQoY2QtPmJhc2UgKyBvZmZzZXQpICYgfm1hc2s7DQorCXdyaXRld19yZWxheGVk
KHZhbCwgY2QtPmJhc2UgKyBvZmZzZXQpOw0KKwlyYXdfc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgm
Y2QtPmxvY2ssIGZsYWdzKTsNCit9DQorDQorc3RhdGljIHZvaWQgbXN0X2ludGNfbWFza19pcnEo
c3RydWN0IGlycV9kYXRhICpkKQ0KK3sNCisJbXN0X3NldF9pcnEoZCwgSU5UQ19NQVNLKTsNCisJ
aXJxX2NoaXBfbWFza19wYXJlbnQoZCk7DQorfQ0KKw0KK3N0YXRpYyB2b2lkIG1zdF9pbnRjX3Vu
bWFza19pcnEoc3RydWN0IGlycV9kYXRhICpkKQ0KK3sNCisJbXN0X2NsZWFyX2lycShkLCBJTlRD
X01BU0spOw0KKwlpcnFfY2hpcF91bm1hc2tfcGFyZW50KGQpOw0KK30NCisNCitzdGF0aWMgdm9p
ZCBtc3RfaW50Y19lb2lfaXJxKHN0cnVjdCBpcnFfZGF0YSAqZCkNCit7DQorCXN0cnVjdCBtc3Rf
aW50Y19jaGlwX2RhdGEgKmNkID0gaXJxX2RhdGFfZ2V0X2lycV9jaGlwX2RhdGEoZCk7DQorDQor
CWlmICghY2QtPm5vX2VvaSkNCisJCW1zdF9zZXRfaXJxKGQsIElOVENfRU9JKTsNCisNCisJaXJx
X2NoaXBfZW9pX3BhcmVudChkKTsNCit9DQorDQorc3RhdGljIHN0cnVjdCBpcnFfY2hpcCBtc3Rf
aW50Y19jaGlwID0gew0KKwkubmFtZQkJCT0gIm1zdC1pbnRjIiwNCisJLmlycV9tYXNrCQk9IG1z
dF9pbnRjX21hc2tfaXJxLA0KKwkuaXJxX3VubWFzawkJPSBtc3RfaW50Y191bm1hc2tfaXJxLA0K
KwkuaXJxX2VvaQkJPSBtc3RfaW50Y19lb2lfaXJxLA0KKwkuaXJxX2dldF9pcnFjaGlwX3N0YXRl
CT0gaXJxX2NoaXBfZ2V0X3BhcmVudF9zdGF0ZSwNCisJLmlycV9zZXRfaXJxY2hpcF9zdGF0ZQk9
IGlycV9jaGlwX3NldF9wYXJlbnRfc3RhdGUsDQorCS5pcnFfc2V0X2FmZmluaXR5CT0gaXJxX2No
aXBfc2V0X2FmZmluaXR5X3BhcmVudCwNCisJLmlycV9zZXRfdmNwdV9hZmZpbml0eQk9IGlycV9j
aGlwX3NldF92Y3B1X2FmZmluaXR5X3BhcmVudCwNCisJLmlycV9zZXRfdHlwZQkJPSBpcnFfY2hp
cF9zZXRfdHlwZV9wYXJlbnQsDQorCS5pcnFfcmV0cmlnZ2VyCQk9IGlycV9jaGlwX3JldHJpZ2dl
cl9oaWVyYXJjaHksDQorCS5mbGFncwkJCT0gSVJRQ0hJUF9TRVRfVFlQRV9NQVNLRUQgfA0KKwkJ
CQkgIElSUUNISVBfU0tJUF9TRVRfV0FLRSB8DQorCQkJCSAgSVJRQ0hJUF9NQVNLX09OX1NVU1BF
TkQsDQorfTsNCisNCitzdGF0aWMgaW50IG1zdF9pbnRjX2RvbWFpbl90cmFuc2xhdGUoc3RydWN0
IGlycV9kb21haW4gKmQsDQorCQkJCSAgICAgc3RydWN0IGlycV9md3NwZWMgKmZ3c3BlYywNCisJ
CQkJICAgICB1bnNpZ25lZCBsb25nICpod2lycSwNCisJCQkJICAgICB1bnNpZ25lZCBpbnQgKnR5
cGUpDQorew0KKwlzdHJ1Y3QgbXN0X2ludGNfY2hpcF9kYXRhICpjZCA9IGQtPmhvc3RfZGF0YTsN
CisNCisJaWYgKGlzX29mX25vZGUoZndzcGVjLT5md25vZGUpKSB7DQorCQlpZiAoZndzcGVjLT5w
YXJhbV9jb3VudCAhPSAzKQ0KKwkJCXJldHVybiAtRUlOVkFMOw0KKw0KKwkJLyogTm8gUFBJIHNo
b3VsZCBwb2ludCB0byB0aGlzIGRvbWFpbiAqLw0KKwkJaWYgKGZ3c3BlYy0+cGFyYW1bMF0gIT0g
MCkNCisJCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJCWlmIChmd3NwZWMtPnBhcmFtWzFdID49IGNk
LT5ucl9pcnFzKQ0KKwkJCXJldHVybiAtRUlOVkFMOw0KKw0KKwkJKmh3aXJxID0gZndzcGVjLT5w
YXJhbVsxXTsNCisJCSp0eXBlID0gZndzcGVjLT5wYXJhbVsyXSAmIElSUV9UWVBFX1NFTlNFX01B
U0s7DQorCQlyZXR1cm4gMDsNCisJfQ0KKw0KKwlyZXR1cm4gLUVJTlZBTDsNCit9DQorDQorc3Rh
dGljIGludCBtc3RfaW50Y19kb21haW5fYWxsb2Moc3RydWN0IGlycV9kb21haW4gKmRvbWFpbiwg
dW5zaWduZWQgaW50IHZpcnEsDQorCQkJCSB1bnNpZ25lZCBpbnQgbnJfaXJxcywgdm9pZCAqZGF0
YSkNCit7DQorCWludCBpOw0KKwlpcnFfaHdfbnVtYmVyX3QgaHdpcnE7DQorCXN0cnVjdCBpcnFf
ZndzcGVjIHBhcmVudF9md3NwZWMsICpmd3NwZWMgPSBkYXRhOw0KKwlzdHJ1Y3QgbXN0X2ludGNf
Y2hpcF9kYXRhICpjZCA9IGRvbWFpbi0+aG9zdF9kYXRhOw0KKw0KKwkvKiBOb3QgR0lDIGNvbXBs
aWFudCAqLw0KKwlpZiAoZndzcGVjLT5wYXJhbV9jb3VudCAhPSAzKQ0KKwkJcmV0dXJuIC1FSU5W
QUw7DQorDQorCS8qIE5vIFBQSSBzaG91bGQgcG9pbnQgdG8gdGhpcyBkb21haW4gKi8NCisJaWYg
KGZ3c3BlYy0+cGFyYW1bMF0pDQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJaHdpcnEgPSBmd3Nw
ZWMtPnBhcmFtWzFdOw0KKwlmb3IgKGkgPSAwOyBpIDwgbnJfaXJxczsgaSsrKQ0KKwkJaXJxX2Rv
bWFpbl9zZXRfaHdpcnFfYW5kX2NoaXAoZG9tYWluLCB2aXJxICsgaSwgaHdpcnEgKyBpLA0KKwkJ
CQkJICAgICAgJm1zdF9pbnRjX2NoaXAsDQorCQkJCQkgICAgICBkb21haW4tPmhvc3RfZGF0YSk7
DQorDQorCXBhcmVudF9md3NwZWMgPSAqZndzcGVjOw0KKwlwYXJlbnRfZndzcGVjLmZ3bm9kZSA9
IGRvbWFpbi0+cGFyZW50LT5md25vZGU7DQorCXBhcmVudF9md3NwZWMucGFyYW1bMV0gPSBjZC0+
aXJxX3N0YXJ0ICsgaHdpcnE7DQorCXJldHVybiBpcnFfZG9tYWluX2FsbG9jX2lycXNfcGFyZW50
KGRvbWFpbiwgdmlycSwgbnJfaXJxcywgJnBhcmVudF9md3NwZWMpOw0KK30NCisNCitzdGF0aWMg
Y29uc3Qgc3RydWN0IGlycV9kb21haW5fb3BzIG1zdF9pbnRjX2RvbWFpbl9vcHMgPSB7DQorCS50
cmFuc2xhdGUJPSBtc3RfaW50Y19kb21haW5fdHJhbnNsYXRlLA0KKwkuYWxsb2MJCT0gbXN0X2lu
dGNfZG9tYWluX2FsbG9jLA0KKwkuZnJlZQkJPSBpcnFfZG9tYWluX2ZyZWVfaXJxc19jb21tb24s
DQorfTsNCisNCitpbnQgX19pbml0DQorbXN0X2ludGNfb2ZfaW5pdChzdHJ1Y3QgZGV2aWNlX25v
ZGUgKmRuLCBzdHJ1Y3QgZGV2aWNlX25vZGUgKnBhcmVudCkNCit7DQorCXN0cnVjdCBpcnFfZG9t
YWluICpkb21haW4sICpkb21haW5fcGFyZW50Ow0KKwlzdHJ1Y3QgbXN0X2ludGNfY2hpcF9kYXRh
ICpjZDsNCisJdTMyIGlycV9zdGFydCwgaXJxX2VuZDsNCisNCisJZG9tYWluX3BhcmVudCA9IGly
cV9maW5kX2hvc3QocGFyZW50KTsNCisJaWYgKCFkb21haW5fcGFyZW50KSB7DQorCQlwcl9lcnIo
Im1zdC1pbnRjOiBpbnRlcnJ1cHQtcGFyZW50IG5vdCBmb3VuZFxuIik7DQorCQlyZXR1cm4gLUVJ
TlZBTDsNCisJfQ0KKw0KKwlpZiAob2ZfcHJvcGVydHlfcmVhZF91MzJfaW5kZXgoZG4sICJtc3Rh
cixpcnFzLW1hcC1yYW5nZSIsIDAsICZpcnFfc3RhcnQpIHx8DQorCSAgICBvZl9wcm9wZXJ0eV9y
ZWFkX3UzMl9pbmRleChkbiwgIm1zdGFyLGlycXMtbWFwLXJhbmdlIiwgMSwgJmlycV9lbmQpKQ0K
KwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCWNkID0ga3phbGxvYyhzaXplb2YoKmNkKSwgR0ZQX0tF
Uk5FTCk7DQorCWlmICghY2QpDQorCQlyZXR1cm4gLUVOT01FTTsNCisNCisJY2QtPmJhc2UgPSBv
Zl9pb21hcChkbiwgMCk7DQorCWlmICghY2QtPmJhc2UpIHsNCisJCWtmcmVlKGNkKTsNCisJCXJl
dHVybiAtRU5PTUVNOw0KKwl9DQorDQorCWNkLT5ub19lb2kgPSBvZl9wcm9wZXJ0eV9yZWFkX2Jv
b2woZG4sICJtc3RhcixpbnRjLW5vLWVvaSIpOw0KKwlyYXdfc3Bpbl9sb2NrX2luaXQoJmNkLT5s
b2NrKTsNCisJY2QtPmlycV9zdGFydCA9IGlycV9zdGFydDsNCisJY2QtPm5yX2lycXMgPSBpcnFf
ZW5kIC0gaXJxX3N0YXJ0ICsgMTsNCisJZG9tYWluID0gaXJxX2RvbWFpbl9hZGRfaGllcmFyY2h5
KGRvbWFpbl9wYXJlbnQsIDAsIGNkLT5ucl9pcnFzLCBkbiwNCisJCQkJCSAgJm1zdF9pbnRjX2Rv
bWFpbl9vcHMsIGNkKTsNCisJaWYgKCFkb21haW4pIHsNCisJCWlvdW5tYXAoY2QtPmJhc2UpOw0K
KwkJa2ZyZWUoY2QpOw0KKwkJcmV0dXJuIC1FTk9NRU07DQorCX0NCisNCisJcmV0dXJuIDA7DQor
fQ0KKw0KK0lSUUNISVBfREVDTEFSRShtc3RfaW50YywgIm1zdGFyLG1zdC1pbnRjIiwgbXN0X2lu
dGNfb2ZfaW5pdCk7DQotLSANCjIuMTguMA0K

