Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 5E8F72FA153
	for <lists+linux-kernel@lfdr.de>; Mon, 18 Jan 2021 14:24:39 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390894AbhARNXU (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 18 Jan 2021 08:23:20 -0500
Received: from mx2.suse.de ([195.135.220.15]:50646 "EHLO mx2.suse.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2392150AbhARNWU (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 18 Jan 2021 08:22:20 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
        by mx2.suse.de (Postfix) with ESMTP id 36D61ACBA;
        Mon, 18 Jan 2021 13:21:37 +0000 (UTC)
Date:   Mon, 18 Jan 2021 14:21:36 +0100
Message-ID: <s5hzh16idnj.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Kai-Heng Feng <kai.heng.feng@canonical.com>
Cc:     tiwai@suse.com, "Kenneth R . Crudup" <kenny@panix.com>,
        Jaroslav Kysela <perex@perex.cz>,
        Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>,
        Kai Vehmanen <kai.vehmanen@linux.intel.com>,
        Ranjani Sridharan <ranjani.sridharan@linux.intel.com>,
        Mark Brown <broonie@kernel.org>,
        Harsha Priya <harshapriya.n@intel.com>,
        alsa-devel@alsa-project.org (moderated list:SOUND),
        linux-kernel@vger.kernel.org (open list)
Subject: Re: [PATCH] ALSA: hda: Balance runtime/system PM if direct-complete is disabled
In-Reply-To: <20210118130937.164650-1-kai.heng.feng@canonical.com>
References: <20210118130937.164650-1-kai.heng.feng@canonical.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 18 Jan 2021 14:09:36 +0100,
Kai-Heng Feng wrote:
> 
> HDA controller can't be runtime-suspended after commit 215a22ed31a1
> ("ALSA: hda: Refactor codjc PM to use direct-complete optimization"),
> which enables direct-complete for HDA codec.
> 
> The HDA codec driver didn't expect direct-complete will be disabled
> after it returns a positive value from prepare() callback. However,
> there are some places that PM core can disable direct-complete. For
> instance, system hibernation or when codec has subordinates like LEDs.

Hmm.  This sounds rather like the approach using the direct-complete
isn't well suited for the purpose?  The increasing number of
regression reports worries me.

> So if a device is prepared for direct-complete but PM core still calls
> codec's suspend or freeze callback, resume the device to keep PM
> operations balanced.

I find the ping-pong of the resume/suspend there a bit odd.  It's no
refcount management but it invokes the real resume there, which is
involved with lots of operations.

Can we rather skip the hda_codec_suspend() call instead (while
changing dev->power.power_state)?


thanks,

Takashi

> Reported-by: Kenneth R. Crudup <kenny@panix.com>
> Fixes: 215a22ed31a1 ("ALSA: hda: Refactor codec PM to use direct-complete optimization")
> Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
> ---
>  sound/pci/hda/hda_codec.c | 6 ++++++
>  1 file changed, 6 insertions(+)
> 
> diff --git a/sound/pci/hda/hda_codec.c b/sound/pci/hda/hda_codec.c
> index 687216e74526..0afbced979df 100644
> --- a/sound/pci/hda/hda_codec.c
> +++ b/sound/pci/hda/hda_codec.c
> @@ -2997,6 +2997,9 @@ static void hda_codec_pm_complete(struct device *dev)
>  
>  static int hda_codec_pm_suspend(struct device *dev)
>  {
> +	if (pm_runtime_status_suspended(dev))
> +		pm_runtime_resume(dev);
> +
>  	dev->power.power_state = PMSG_SUSPEND;
>  	return hda_codec_suspend(dev);
>  }
> @@ -3009,6 +3012,9 @@ static int hda_codec_pm_resume(struct device *dev)
>  
>  static int hda_codec_pm_freeze(struct device *dev)
>  {
> +	if (pm_runtime_status_suspended(dev))
> +		pm_runtime_resume(dev);
> +
>  	dev->power.power_state = PMSG_FREEZE;
>  	return hda_codec_suspend(dev);
>  }
> -- 
> 2.29.2
> 
