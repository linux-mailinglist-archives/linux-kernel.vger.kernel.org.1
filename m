Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 9BDAB2DC3FE
	for <lists+linux-kernel@lfdr.de>; Wed, 16 Dec 2020 17:23:25 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726261AbgLPQW7 (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Wed, 16 Dec 2020 11:22:59 -0500
Received: from mx2.suse.de ([195.135.220.15]:37750 "EHLO mx2.suse.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725769AbgLPQW7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 16 Dec 2020 11:22:59 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
        by mx2.suse.de (Postfix) with ESMTP id 7F475AFAC;
        Wed, 16 Dec 2020 16:22:17 +0000 (UTC)
Date:   Wed, 16 Dec 2020 17:22:17 +0100
Message-ID: <s5hsg85n2km.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Kai-Heng Feng <kai.heng.feng@canonical.com>
Cc:     tiwai@suse.com, Jaroslav Kysela <perex@perex.cz>,
        Kai Vehmanen <kai.vehmanen@linux.intel.com>,
        Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>,
        Alex Deucher <alexander.deucher@amd.com>,
        Mike Rapoport <rppt@kernel.org>,
        "moderated list:SOUND" <alsa-devel@alsa-project.org>,
        open list <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v2] ALSA: hda: Continue to probe when codec probe fails
In-Reply-To: <CAAd53p6Ef2zFX_t3y1c6O7BmHnxYGtGSfgzXAMQSom1ainWXzg@mail.gmail.com>
References: <20201214060621.1102931-1-kai.heng.feng@canonical.com>
        <20201216124726.2842197-1-kai.heng.feng@canonical.com>
        <s5h5z51oj12.wl-tiwai@suse.de>
        <CAAd53p6kORC1GsW5zt+=0=J5ki43iriO-OqtFvf5W67LWhyyhA@mail.gmail.com>
        <s5hzh2dn3oa.wl-tiwai@suse.de>
        <CAAd53p6Ef2zFX_t3y1c6O7BmHnxYGtGSfgzXAMQSom1ainWXzg@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, 16 Dec 2020 17:07:45 +0100,
Kai-Heng Feng wrote:
> 
> On Wed, Dec 16, 2020 at 11:58 PM Takashi Iwai <tiwai@suse.de> wrote:
> >
> > On Wed, 16 Dec 2020 16:50:20 +0100,
> > Kai-Heng Feng wrote:
> > >
> > > On Wed, Dec 16, 2020 at 11:41 PM Takashi Iwai <tiwai@suse.de> wrote:
> > > >
> > > > On Wed, 16 Dec 2020 13:47:24 +0100,
> > > > Kai-Heng Feng wrote:
> > > > >
> > > > > Similar to commit 9479e75fca37 ("ALSA: hda: Keep the controller
> > > > > initialization even if no codecs found"), when codec probe fails, it
> > > > > doesn't enable runtime suspend, and can prevent graphics card from
> > > > > getting powered down:
> > > > > [    4.280991] snd_hda_intel 0000:01:00.1: no codecs initialized
> > > > >
> > > > > $ cat /sys/bus/pci/devices/0000:01:00.1/power/runtime_status
> > > > > active
> > > > >
> > > > > So mark there's no codec and continue probing to let runtime PM to work.
> > > > >
> > > > > BugLink: https://bugs.launchpad.net/bugs/1907212
> > > > > Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
> > > >
> > > > Hm, but if the probe fails, doesn't it mean something really wrong?
> > > > IOW, how does this situation happen?
> > >
> > > The HDA controller is forcely created by quirk_nvidia_hda(). So
> > > probably there's really not an HDA controller.
> >
> > I still don't understand how non-zero codec_mask is passed.
> > The non-zero codec_mask means that BIOS or whatever believes that
> > HD-audio codecs are present and let HD-audio controller reporting the
> > presence.  What error did you get at probing?
> 
> [    4.280991] snd_hda_intel 0000:01:00.1: no codecs initialized
> Full dmesg here:
> https://launchpadlibrarian.net/510351476/dmesg.log

The actual problems are shown before that line.

[    4.178848] pci 0000:01:00.1: can't change power state from D3cold to D0 (config space inaccessible)
[    4.179502] snd_hda_intel 0000:01:00.1: can't change power state from D3cold to D0 (config space inaccessible)
[    4.179511] snd_hda_intel 0000:01:00.1: can't change power state from D3hot to D0 (config space inaccessible)
....
[    4.280571] hdaudio hdaudioC1D0: no AFG or MFG node found
[    4.280633] hdaudio hdaudioC1D1: no AFG or MFG node found
[    4.280685] hdaudio hdaudioC1D2: no AFG or MFG node found
[    4.280736] hdaudio hdaudioC1D3: no AFG or MFG node found
[    4.280788] hdaudio hdaudioC1D4: no AFG or MFG node found
[    4.280839] hdaudio hdaudioC1D5: no AFG or MFG node found
[    4.280892] hdaudio hdaudioC1D6: no AFG or MFG node found
[    4.280943] hdaudio hdaudioC1D7: no AFG or MFG node found

Could you check the codec_mask value read in
sound/hda/hdac_controller.c?  I guess it reads 0xff.

If that's the case, it can be corrected by the patch below.
But, we should check the cause of the first error (inaccessible config
space) in anyway; this must be the primary reason of the whole chain
of errors.

> > > > The usual no-codec state is for the devices that have a bogus HD-audio
> > > > bus remaining while codecs aren't hooked or disabled by BIOS.  For
> > > > that, it makes to leave the controller driver and let it idle.  But if
> > > > you get really an error, it's something to fix there, not to just
> > > > ignore in general.
> > >
> > > The best approach I can think of is to make current two steps probe
> > > into one. So when probe fails, the driver won't bind to the device.
> > > What's the reason behind the two steps approach?
> >
> > It's a sort of must, as the module loading is involved with binding
> > with the codecs, as well as (optionally) request_firmware()
> > invocation.
> 
> Ok. I also tried to use device_release_driver(), but azx_remove()
> calls "cancel_work_sync(&hda->probe_work)" so there will be a
> deadlock.

You can't do that.


Takashi

---
--- a/sound/hda/hdac_controller.c
+++ b/sound/hda/hdac_controller.c
@@ -449,6 +449,10 @@ int snd_hdac_bus_reset_link(struct hdac_bus *bus, bool full_reset)
 	if (!bus->codec_mask) {
 		bus->codec_mask = snd_hdac_chip_readw(bus, STATESTS);
 		dev_dbg(bus->dev, "codec_mask = 0x%lx\n", bus->codec_mask);
+		if (bus->codec_mask == 0xff) {
+			dev_err(bus->dev, "failed to read STATESTS register\n");
+			bus->codec_mask = 0;
+		}
 	}
 
 	return 0;
