Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id ECB622DC39B
	for <lists+linux-kernel@lfdr.de>; Wed, 16 Dec 2020 16:59:56 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726657AbgLPP7L (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Wed, 16 Dec 2020 10:59:11 -0500
Received: from mx2.suse.de ([195.135.220.15]:46120 "EHLO mx2.suse.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725957AbgLPP7L (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 16 Dec 2020 10:59:11 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
        by mx2.suse.de (Postfix) with ESMTP id C7B6AAC7B;
        Wed, 16 Dec 2020 15:58:29 +0000 (UTC)
Date:   Wed, 16 Dec 2020 16:58:29 +0100
Message-ID: <s5hzh2dn3oa.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Kai-Heng Feng <kai.heng.feng@canonical.com>
Cc:     tiwai@suse.com, Jaroslav Kysela <perex@perex.cz>,
        Kai Vehmanen <kai.vehmanen@linux.intel.com>,
        Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>,
        Alex Deucher <alexander.deucher@amd.com>,
        Mike Rapoport <rppt@kernel.org>,
        "moderated list:SOUND" <alsa-devel@alsa-project.org>,
        open list <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v2] ALSA: hda: Continue to probe when codec probe fails
In-Reply-To: <CAAd53p6kORC1GsW5zt+=0=J5ki43iriO-OqtFvf5W67LWhyyhA@mail.gmail.com>
References: <20201214060621.1102931-1-kai.heng.feng@canonical.com>
        <20201216124726.2842197-1-kai.heng.feng@canonical.com>
        <s5h5z51oj12.wl-tiwai@suse.de>
        <CAAd53p6kORC1GsW5zt+=0=J5ki43iriO-OqtFvf5W67LWhyyhA@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, 16 Dec 2020 16:50:20 +0100,
Kai-Heng Feng wrote:
> 
> On Wed, Dec 16, 2020 at 11:41 PM Takashi Iwai <tiwai@suse.de> wrote:
> >
> > On Wed, 16 Dec 2020 13:47:24 +0100,
> > Kai-Heng Feng wrote:
> > >
> > > Similar to commit 9479e75fca37 ("ALSA: hda: Keep the controller
> > > initialization even if no codecs found"), when codec probe fails, it
> > > doesn't enable runtime suspend, and can prevent graphics card from
> > > getting powered down:
> > > [    4.280991] snd_hda_intel 0000:01:00.1: no codecs initialized
> > >
> > > $ cat /sys/bus/pci/devices/0000:01:00.1/power/runtime_status
> > > active
> > >
> > > So mark there's no codec and continue probing to let runtime PM to work.
> > >
> > > BugLink: https://bugs.launchpad.net/bugs/1907212
> > > Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
> >
> > Hm, but if the probe fails, doesn't it mean something really wrong?
> > IOW, how does this situation happen?
> 
> The HDA controller is forcely created by quirk_nvidia_hda(). So
> probably there's really not an HDA controller.

I still don't understand how non-zero codec_mask is passed.
The non-zero codec_mask means that BIOS or whatever believes that
HD-audio codecs are present and let HD-audio controller reporting the
presence.  What error did you get at probing?


> > The usual no-codec state is for the devices that have a bogus HD-audio
> > bus remaining while codecs aren't hooked or disabled by BIOS.  For
> > that, it makes to leave the controller driver and let it idle.  But if
> > you get really an error, it's something to fix there, not to just
> > ignore in general.
> 
> The best approach I can think of is to make current two steps probe
> into one. So when probe fails, the driver won't bind to the device.
> What's the reason behind the two steps approach?

It's a sort of must, as the module loading is involved with binding
with the codecs, as well as (optionally) request_firmware()
invocation.


Takashi
