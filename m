Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id AE7C929A64C
	for <lists+linux-kernel@lfdr.de>; Tue, 27 Oct 2020 09:12:51 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2508843AbgJ0IMJ (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Tue, 27 Oct 2020 04:12:09 -0400
Received: from mx2.suse.de ([195.135.220.15]:41000 "EHLO mx2.suse.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2394654AbgJ0IMI (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Oct 2020 04:12:08 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
        by mx2.suse.de (Postfix) with ESMTP id 80099AC2F;
        Tue, 27 Oct 2020 08:12:07 +0000 (UTC)
Date:   Tue, 27 Oct 2020 09:12:07 +0100
Message-ID: <s5himaw2ilk.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Kai-Heng Feng <kai.heng.feng@canonical.com>
Cc:     tiwai@suse.com, perex@perex.cz, hui.wang@canonical.com,
        kai.vehmanen@linux.intel.com, alsa-devel@alsa-project.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2 3/4] ALSA: hda: Separate runtime and system suspend
In-Reply-To: <s5hlffs2jsy.wl-tiwai@suse.de>
References: <20201027054001.1800-1-kai.heng.feng@canonical.com>
        <20201027054001.1800-4-kai.heng.feng@canonical.com>
        <s5hlffs2jsy.wl-tiwai@suse.de>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, 27 Oct 2020 08:46:05 +0100,
Takashi Iwai wrote:
> > @@ -1103,10 +1115,8 @@ static int azx_runtime_suspend(struct device *dev)
> >  	chip = card->private_data;
> >  
> >  	/* enable controller wake up event */
> > -	if (snd_power_get_state(card) == SNDRV_CTL_POWER_D0) {
> > -		azx_writew(chip, WAKEEN, azx_readw(chip, WAKEEN) |
> > -			   STATESTS_INT_MASK);
> > -	}
> > +	azx_writew(chip, WAKEEN, azx_readw(chip, WAKEEN) |
> > +		   STATESTS_INT_MASK);
> 
> ... here we should have the check of chip->prepared, and set WAKEEN
> only when it's false.  Otherwise WAKEEN is set up for the system
> suspend, and it might lead to spurious wakeups.  (IOW, checking the
> flag at resume doesn't help for preventing the spurious wakeup :)

Scratch my comment above; it's the code path only for the runtime
suspend in your new code, then this cleanup makes sense.


thanks,

Takashi
