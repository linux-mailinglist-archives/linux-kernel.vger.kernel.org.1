Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 23E0419F385
	for <lists+linux-kernel@lfdr.de>; Mon,  6 Apr 2020 12:30:46 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726898AbgDFKan (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 6 Apr 2020 06:30:43 -0400
Received: from ozlabs.org ([203.11.71.1]:45315 "EHLO ozlabs.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726675AbgDFKam (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 6 Apr 2020 06:30:42 -0400
Received: from authenticated.ozlabs.org (localhost [127.0.0.1])
        (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
         key-exchange ECDHE (P-256) server-signature RSA-PSS (4096 bits) server-digest SHA256)
        (No client certificate requested)
        by mail.ozlabs.org (Postfix) with ESMTPSA id 48wmyl5g9kz9sQx;
        Mon,  6 Apr 2020 20:30:39 +1000 (AEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=ellerman.id.au;
        s=201909; t=1586169040;
        bh=J5Gd4sFnjMTia0MKfTM4yZ4mKW3Qdp/00DZrLvgYTxk=;
        h=From:To:Cc:Subject:In-Reply-To:References:Date:From;
        b=QicFLfQGVKf+EPEYIGe18QEpu6hKyZuXjgrAYbCk3RLWX+UCTouDgg0ACEP7WNh/i
         JN0vleiGiYFEd1IG3RnQvRKXfRpKxdj3zoSPrkKjCFS3XMLgSb5JOnKTeH2bqP1tBd
         V4js1Frnhko4PiK8YJDeArFluBvP5+dbOSY0gBnEuFan4ukV2njhtMQBJrV7DtgNK1
         ycXOhJkA/CtlcvBZ7KAl3MoLXsTCrbZN+DObrxKXLlFrut73b6IeFXl1cHc1c/95+t
         t3hovoPqlZ51a8/zHHklmJeljzX+xRG03RdBfKovtGInBjDLNDuEy/NQFtzIKqo0Ha
         PSMBJnn05ciVQ==
From:   Michael Ellerman <mpe@ellerman.id.au>
To:     Qiujun Huang <hqjagain@gmail.com>, benh@kernel.crashing.org,
        paulus@samba.org, oohall@gmail.com
Cc:     tglx@linutronix.de, Markus.Elfring@web.de, christophe.leroy@c-s.fr,
        linuxppc-dev@lists.ozlabs.org, linux-kernel@vger.kernel.org,
        Qiujun Huang <hqjagain@gmail.com>
Subject: Re: [PATCH v4] powerpc/powernv: add NULL check after kzalloc in opal_add_one_export
In-Reply-To: <20200406093944.4174-1-hqjagain@gmail.com>
References: <20200406093944.4174-1-hqjagain@gmail.com>
Date:   Mon, 06 Apr 2020 20:30:50 +1000
Message-ID: <87eet0sy79.fsf@mpe.ellerman.id.au>
MIME-Version: 1.0
Content-Type: text/plain
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Qiujun Huang <hqjagain@gmail.com> writes:
> Here needs a NULL check as kzalloc may fail returning NULL.
>
> Issue was found by coccinelle.
> Generated by: scripts/coccinelle/null/kmerr.cocci
>
> Signed-off-by: Qiujun Huang <hqjagain@gmail.com>
> Reviewed-by: Oliver O'Halloran <oohall@gmail.com>
>
> ---

Thanks for putting up with all the review comments :)

But I think this should actually be two patches now.

The first patch should change the goto after
of_property_read_u64_array() into a return and drop the redundant
assignments.

Then the second patch can add the NULL check for attr.

cheers

> v3->v4:
> 	Added the information about coccinelle script.
> 	Added change log.
> 	Added Oliver's Reviewed-by.
> v2->v3:
> 	Removed redundant assignment to 'attr' and 'name'.
> v1->v2:
> 	Just return -ENOMEM if attr is NULL.
> ---
>  arch/powerpc/platforms/powernv/opal.c | 9 ++++++---
>  1 file changed, 6 insertions(+), 3 deletions(-)
>
> diff --git a/arch/powerpc/platforms/powernv/opal.c b/arch/powerpc/platforms/powernv/opal.c
> index 2b3dfd0b6cdd..908d749bcef5 100644
> --- a/arch/powerpc/platforms/powernv/opal.c
> +++ b/arch/powerpc/platforms/powernv/opal.c
> @@ -801,16 +801,19 @@ static ssize_t export_attr_read(struct file *fp, struct kobject *kobj,
>  static int opal_add_one_export(struct kobject *parent, const char *export_name,
>  			       struct device_node *np, const char *prop_name)
>  {
> -	struct bin_attribute *attr = NULL;
> -	const char *name = NULL;
> +	struct bin_attribute *attr;
> +	const char *name;
>  	u64 vals[2];
>  	int rc;
>  
>  	rc = of_property_read_u64_array(np, prop_name, &vals[0], 2);
>  	if (rc)
> -		goto out;
> +		return rc;
>  
>  	attr = kzalloc(sizeof(*attr), GFP_KERNEL);
> +	if (!attr)
> +		return -ENOMEM;
> +
>  	name = kstrdup(export_name, GFP_KERNEL);
>  	if (!name) {
>  		rc = -ENOMEM;
> -- 
> 2.17.1
