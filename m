Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id E9D643048EB
	for <lists+linux-kernel@lfdr.de>; Tue, 26 Jan 2021 20:43:42 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727724AbhAZFgj (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Tue, 26 Jan 2021 00:36:39 -0500
Received: from foss.arm.com ([217.140.110.172]:45116 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727614AbhAYKqR (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 25 Jan 2021 05:46:17 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id B348A11FB;
        Mon, 25 Jan 2021 02:45:15 -0800 (PST)
Received: from [10.57.40.145] (unknown [10.57.40.145])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id E92033F66E;
        Mon, 25 Jan 2021 02:45:12 -0800 (PST)
Subject: Re: [RFC PATCH] perf: Handle multiple formatted AUX records
To:     Peter Zijlstra <peterz@infradead.org>
Cc:     Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        linux-kernel@vger.kernel.org, coresight@lists.linaro.org,
        Ingo Molnar <mingo@redhat.com>, will@kernel.org,
        mark.rutland@arm.com, mike.leach@linaro.org, al.grant@arm.com,
        anshuman.khandual@arm.com, mathieu.poirier@linaro.org,
        linux-arm-kernel@lists.infradead.org, jolsa@redhat.com,
        acme@kernel.org
References: <20210122151829.2890484-1-suzuki.poulose@arm.com>
 <20210122151829.2890484-2-suzuki.poulose@arm.com>
 <YA6cjdmfG8x2EggP@hirez.programming.kicks-ass.net>
From:   Suzuki K Poulose <suzuki.poulose@arm.com>
Message-ID: <b30069fb-3df4-8c8a-9ee8-471c0a6d5f38@arm.com>
Date:   Mon, 25 Jan 2021 10:45:06 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101
 Thunderbird/78.6.1
MIME-Version: 1.0
In-Reply-To: <YA6cjdmfG8x2EggP@hirez.programming.kicks-ass.net>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Peter

On 1/25/21 10:25 AM, Peter Zijlstra wrote:
> On Fri, Jan 22, 2021 at 03:18:29PM +0000, Suzuki K Poulose wrote:
>> CoreSight PMU supports aux-buffer for the ETM tracing. The trace
>> generated by the ETM (associated with individual CPUs, like Intel PT)
>> is captured by a separate IP (CoreSight TMC-ETR/ETF until now).
>>
>> The TMC-ETR applies formatting of the raw ETM trace data, as it
>> can collect traces from multiple ETMs, with the TraceID to indicate
>> the source of a given trace packet.
>>
>> Arm Trace Buffer Extension is new "sink" IP, attached to individual
>> CPUs and thus do not provide additional formatting, like TMC-ETR.
>>
>> Additionally, a system could have both TRBE *and* TMC-ETR for
>> the trace collection. e.g, TMC-ETR could be used as a single
>> trace buffer to collect data from multiple ETMs to correlate
>> the traces from different CPUs. It is possible to have a
>> perf session where some events end up collecting the trace
>> in TMC-ETR while the others in TRBE. Thus we need a way
>> to identify the type of the trace for each AUX record.
>>
>> This patch adds a new flag to indicate the trace format
>> for the given record. Also, includes the changes that
>> demonstrates how this can be used in the CoreSight PMU
>> to solve the problem.
>>
>> Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
>> ---
> 
>> diff --git a/include/uapi/linux/perf_event.h b/include/uapi/linux/perf_event.h
>> index b15e3447cd9f..ea7dcc7b30f0 100644
>> --- a/include/uapi/linux/perf_event.h
>> +++ b/include/uapi/linux/perf_event.h
>> @@ -1109,6 +1109,7 @@ enum perf_callchain_context {
>>   #define PERF_AUX_FLAG_OVERWRITE		0x02	/* snapshot from overwrite mode */
>>   #define PERF_AUX_FLAG_PARTIAL		0x04	/* record contains gaps */
>>   #define PERF_AUX_FLAG_COLLISION		0x08	/* sample collided with another */
>> +#define PERF_AUX_FLAG_ALT_FMT		0x10	/* this record is in alternate trace format */
> 
> Since we have a whole u64, do we want to reserve a whole nibble (or
> maybe even a byte) for a format type? Because with a single bit like
> this, we'll kick ourselves when we end up with the need for a 3rd format
> type.
> 

Sure, makes sense. We could do:

#define PERF_AUX_FLAG_PMU_FORMAT_TYPE_MASK	0xff00

Additionally, the values could be allocated by individual PMUs and
interpreted by the corresponding counterpart. That way we don't
have to worry about centralized allocation of the "TYPE" fields.

e,g:

#define PERF_AUX_FLAG_CORESIGHT_FORMAT_CORESIGHT	0x0000
#define PERF_AUX_FLAG_CORESIGHT_FORMAT_RAW		0x0100

#define PERF_AUX_FLAG_RANDOM_PMU_FORMAT_FMT1		0x0000
#define PERF_AUX_FLAG_RANDOM_PMU_FORMAT_FMT2		0x0100


What do you think ?

Cheers
Suzuki





