Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 16D34207749
	for <lists+linux-kernel@lfdr.de>; Wed, 24 Jun 2020 17:23:10 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404197AbgFXPXC (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Wed, 24 Jun 2020 11:23:02 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:58922 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2404092AbgFXPXB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 24 Jun 2020 11:23:01 -0400
Received: from mail-qv1-xf42.google.com (mail-qv1-xf42.google.com [IPv6:2607:f8b0:4864:20::f42])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 8CEDFC061573
        for <linux-kernel@vger.kernel.org>; Wed, 24 Jun 2020 08:23:01 -0700 (PDT)
Received: by mail-qv1-xf42.google.com with SMTP id u8so1190057qvj.12
        for <linux-kernel@vger.kernel.org>; Wed, 24 Jun 2020 08:23:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id;
        bh=o8WO4FwPMMVJumAcMtjFKZzBUw94gPXqNMSz5go/YzA=;
        b=fLWp55cC6brOr3WSJga3/tcSm/BlsyClXysj/n1kXkr6Gm1JOwArAv9EugsTxYhGmL
         6fOcv6Cb6pggdB128TXaTlsWOySfTJJZ2fPiEQcDFdScieY8UDi1DBxafIlfNa2yZdaV
         XMA4tta+xS0e4/xANOizXBlgJoNXUi0Xs+MkspK0Gy1IaNqICBRYBVVbWbKqFlizuNn+
         2n8WjjJI1eFeDJjqoaaFAcPdai6JyjC2B6KLY3DMamJtLXeSUEWtnop14fn9elqCEGQH
         /M9j8ivJR3mqi+wvyKRtXRYhXX43LGEKNAnfM/652TzNUF/RUpgpUToJ/YLP2GO+PUVi
         1Gtg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=o8WO4FwPMMVJumAcMtjFKZzBUw94gPXqNMSz5go/YzA=;
        b=X8m1tajDG7j+wmMyKGM7IwpoRHp/S5KOPzqFNabZjoZ6DRyQZdZ0yyhrF9H+FmDib1
         KCaZVUwFvQ1XAkGaPn1GpdbtejEIy5lTHopHENXArd0Uxn/918z8mLPJopuDNh9TanKd
         NFah6XLY/O28x7/5SDth7PVKo4gQUjTCf8RTYJIYkI6Rkj3XIQE571JND7FxsISQfWEN
         YqrakCyK3xpL1UNeXNZrhSXeDYX5tFE15fa8jZhLKkNfDH8SQfBauQv32LQmeqU6DBzQ
         lJj8ZlYR7N+t4EgpKGkgA0DcztIxm2vnoEiKcfWCvUddnC9Ln/uURtXfQiYowhrItC9s
         28cQ==
X-Gm-Message-State: AOAM532eMvTahfFEYgK2b/wMOkrwGd/emBhKJOwQHmwTG5PUWOhn3wi6
        5Rkz0O3wpWAXX+vCmBvmUcI=
X-Google-Smtp-Source: ABdhPJw+Sg4HKtlC6yNVorphDuMImKS5ITm7fR2GvW7ccjgSaqLox34vx6TRkuDqGh2xwrN9fMYagg==
X-Received: by 2002:a0c:8d46:: with SMTP id s6mr31945947qvb.241.1593012180655;
        Wed, 24 Jun 2020 08:23:00 -0700 (PDT)
Received: from localhost.localdomain ([72.53.229.195])
        by smtp.gmail.com with ESMTPSA id w1sm3558521qto.0.2020.06.24.08.22.59
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Wed, 24 Jun 2020 08:23:00 -0700 (PDT)
From:   Sven Van Asbroeck <thesven73@gmail.com>
X-Google-Original-From: Sven Van Asbroeck <TheSven73@gmail.com>
To:     shawnguo@kernel.org, fugang.duan@nxp.com
Cc:     Sascha Hauer <s.hauer@pengutronix.de>,
        Pengutronix Kernel Team <kernel@pengutronix.de>,
        Fabio Estevam <festevam@gmail.com>,
        NXP Linux Team <linux-imx@nxp.com>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: [PATCH v3] ARM: imx6plus: enable internal routing of clk_enet_ref where possible
Date:   Wed, 24 Jun 2020 11:22:56 -0400
Message-Id: <20200624152256.21937-1-TheSven73@gmail.com>
X-Mailer: git-send-email 2.17.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On imx6, the ethernet reference clock (clk_enet_ref) can be generated
by either the imx6, or an external source (e.g. an oscillator or the
PHY). When generated by the imx6, the clock source (from ANATOP)
must be routed to the input of clk_enet_ref via two pads on the SoC,
typically via a dedicated track on the PCB.

On an imx6 plus however, there is a new setting which enables this
clock to be routed internally on the SoC, from its ANATOP clock
source, straight to clk_enet_ref, without having to go through
the SoC pads.

Board designs where the clock is generated by the imx6 should not
be affected by routing the clock internally. Therefore on a plus,
we can enable internal routing by default.

Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
---
v2 -> v3:
  - remove check for imx6q, which is already implied when
    of_machine_is_compatible("fsl,imx6qp")
v1 -> v2:
  - Fabio Estevam: use of_machine_is_compatible() to determine if we
    are running on an imx6 plus.

To: Shawn Guo <shawnguo@kernel.org>
To: Andy Duan <fugang.duan@nxp.com>
Cc: Sascha Hauer <s.hauer@pengutronix.de>
Cc: Pengutronix Kernel Team <kernel@pengutronix.de>
Cc: Fabio Estevam <festevam@gmail.com>
Cc: NXP Linux Team <linux-imx@nxp.com>
Cc: linux-arm-kernel@lists.infradead.org
Cc: linux-kernel@vger.kernel.org

 arch/arm/mach-imx/mach-imx6q.c              | 18 ++++++++++++++++++
 include/linux/mfd/syscon/imx6q-iomuxc-gpr.h |  1 +
 2 files changed, 19 insertions(+)

diff --git a/arch/arm/mach-imx/mach-imx6q.c b/arch/arm/mach-imx/mach-imx6q.c
index 85c084a716ab..a760779b934e 100644
--- a/arch/arm/mach-imx/mach-imx6q.c
+++ b/arch/arm/mach-imx/mach-imx6q.c
@@ -203,6 +203,24 @@ static void __init imx6q_1588_init(void)
 	else
 		pr_err("failed to find fsl,imx6q-iomuxc-gpr regmap\n");
 
+	/*
+	 * On imx6 plus, enet_ref from ANATOP/CCM can be internally routed to
+	 * be the PTP clock source, instead of having to be routed through
+	 * pads.
+	 * Board designs which route the ANATOP/CCM clock through pads are
+	 * unaffected when routing happens internally. So on these designs,
+	 * route internally by default.
+	 */
+	if (clksel == IMX6Q_GPR1_ENET_CLK_SEL_ANATOP &&
+			of_machine_is_compatible("fsl,imx6qp")) {
+		if (!IS_ERR(gpr))
+			regmap_update_bits(gpr, IOMUXC_GPR5,
+					IMX6Q_GPR5_ENET_TXCLK_SEL,
+					IMX6Q_GPR5_ENET_TXCLK_SEL);
+		else
+			pr_err("failed to find fsl,imx6q-iomuxc-gpr regmap\n");
+		}
+
 	clk_put(enet_ref);
 put_ptp_clk:
 	clk_put(ptp_clk);
diff --git a/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h b/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h
index d4b5e527a7a3..eb65d48da0df 100644
--- a/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h
+++ b/include/linux/mfd/syscon/imx6q-iomuxc-gpr.h
@@ -240,6 +240,7 @@
 #define IMX6Q_GPR4_IPU_RD_CACHE_CTL		BIT(0)
 
 #define IMX6Q_GPR5_L2_CLK_STOP			BIT(8)
+#define IMX6Q_GPR5_ENET_TXCLK_SEL		BIT(9)
 #define IMX6Q_GPR5_SATA_SW_PD			BIT(10)
 #define IMX6Q_GPR5_SATA_SW_RST			BIT(11)
 
-- 
2.17.1

